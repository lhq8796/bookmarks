{"version":3,"sources":["webpack:///./src/views/demo/js-mvc.vue","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./src/views/demo/js-mvc.js","webpack:///./src/views/demo/js-mvc.vue?4bc2"],"names":["id","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Model","constructor","this","todos","JSON","parse","localStorage","getItem","update","setItem","stringify","addTodo","todo","console","log","onTodoListChanged","editTodo","updatedText","map","complete","deleteTodo","filter","toggleTodo","text","bindEvents","controller","View","app","getElement","title","createElement","textContent","form","input","type","placeholder","name","submitButton","todoList","append","tag","className","element","document","classList","add","selector","querySelector","resetInput","displayTodos","firstChild","removeChild","length","p","forEach","li","checkbox","checked","span","contentEditable","strike","deleteButton","addEventListener","handleAddTodo","handleDeleteTodo","handleEditTodo","handleEditTodoComplete","handleToggle","Controller","model","view","event","preventDefault","todoText","target","parseInt","parentElement","temporaryEditValue","innerText","render"],"mappings":"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","file":"js/demo_js-mvc.43f27855.js","sourcesContent":["<template>\n  <div id=\"root_js-mvc\"></div>\n</template>\n\n<script>\nimport './js-mvc.scss'\nimport { onMounted, ref } from '@vue/runtime-core'\nimport { Model, View, Controller } from './js-mvc.js'\nexport default {\n  name: 'JSMVC',\n  setup() {\n    let app = ref(null)\n    onMounted(() => {\n      app.value = new Controller(new Model(), new View())\n    })\n\n    return {\n      app,\n    }\n  },\n}\n</script>\n\n<style></style>\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","// 模型\nexport class Model {\n  constructor() {\n    // The state of the model, an array of todo objects, prepopulated with some data\n\n    this.todos = JSON.parse(localStorage.getItem('todos')) || []\n  }\n\n  update() {\n    localStorage.setItem('todos', JSON.stringify(this.todos))\n  }\n\n  // Append a todo to the todos array\n  addTodo(todo) {\n    this.todos = [...this.todos, todo]\n    console.log(this.todos)\n\n    this.update()\n    this.onTodoListChanged(this.todos)\n  }\n\n  // Map through all todos, and replace the text of the todo width the speccified id\n  editTodo(id, updatedText) {\n    this.todos = this.todos.map(todo => {\n      todo.id === id\n        ? { id: todo.id, text: updatedText, complete: todo.complete }\n        : todo\n    })\n    this.update()\n    this.onTodoListChanged(this.todos)\n  }\n\n  // Filter a todo out of the array by id\n  deleteTodo(id) {\n    this.todos = this.todos.filter(todo => todo.id !== id)\n    this.update()\n    this.onTodoListChanged(this.todos)\n  }\n\n  // Flip the complete boolean on the specified todo\n  toggleTodo(id) {\n    this.todos = this.todos.map(todo => {\n      return todo.id === id\n        ? { id: todo.id, text: todo.text, complete: !todo.complete }\n        : todo\n    })\n    this.update()\n    this.onTodoListChanged(this.todos)\n  }\n\n  bindEvents(controller) {\n    this.onTodoListChanged = controller.onTodoListChanged\n  }\n}\n\nexport class View {\n  constructor() {\n    // The root element\n    this.app = this.getElement('#root_js-mvc')\n\n    // The title of the app\n    this.title = this.createElement('h1')\n    this.title.textContent = 'Todos'\n\n    // The form, with a [type=\"text\"] input, and a submit button\n    this.form = this.createElement('form')\n\n    this.input = this.createElement('input')\n    this.input.type = 'text'\n    this.input.placeholder = 'Add todo'\n    this.input.name = 'todo'\n\n    this.submitButton = this.createElement('button')\n    this.submitButton.textContent = 'Submit'\n\n    // The visual representation of the todo list\n    this.todoList = this.createElement('ul', 'todo-list')\n\n    // Append the input and submit button to the form\n    this.form.append(this.input, this.submitButton)\n\n    // Append the title, form, and todo list to the app\n    this.app.append(this.title, this.form, this.todoList)\n  }\n\n  // Create an element with an optional CSS class\n  createElement(tag, className) {\n    const element = document.createElement(tag)\n    if (className) element.classList.add(className)\n\n    return element\n  }\n\n  // Retrieve an element form the DOM\n  getElement(selector) {\n    const element = document.querySelector(selector)\n\n    return element\n  }\n\n  get todoText() {\n    return this.input.value\n  }\n\n  resetInput() {\n    this.input.value = ''\n  }\n\n  displayTodos(todos) {\n    // Delete all nodes\n    while (this.todoList.firstChild) {\n      this.todoList.removeChild(this.todoList.firstChild)\n    }\n\n    // Show default message\n    if (todos.length === 0) {\n      const p = this.createElement('p')\n      p.textContent = 'Nothing to do! Add a task?'\n      this.todoList.append(p)\n    } else {\n      todos.forEach(todo => {\n        const li = this.createElement('li')\n        li.id = todo.id\n\n        // Each todo item will have a checkbox you can toggle\n        const checkbox = this.createElement('input')\n        checkbox.type = 'checkbox'\n        checkbox.checked = todo.complete\n\n        // The todo item will be in a contenteditable span\n        const span = this.createElement('span')\n        span.contentEditable = true\n        span.classList.add('editable')\n\n        // If the todo is complete, it will have a strikethrough\n        if (todo.complete) {\n          const strike = this.createElement('s')\n          strike.textContent = todo.text\n          span.append(strike)\n        } else {\n          // Otherwise just display the text\n          span.textContent = todo.text\n        }\n\n        // The todos will also have a delete button\n        const deleteButton = this.createElement('button', 'delete')\n        deleteButton.textContent = 'Delete'\n        li.append(checkbox, span, deleteButton)\n\n        // Append nodes to the todo list\n        this.todoList.append(li)\n      })\n    }\n  }\n\n  bindEvents(controller) {\n    this.form.addEventListener('submit', controller.handleAddTodo)\n    this.todoList.addEventListener('click', controller.handleDeleteTodo)\n    this.todoList.addEventListener('input', controller.handleEditTodo)\n    this.todoList.addEventListener(\n      'focusout',\n      controller.handleEditTodoComplete\n    )\n    this.todoList.addEventListener('change', controller.handleToggle)\n  }\n}\n\nexport class Controller {\n  constructor(model, view) {\n    this.model = model\n    this.view = view\n\n    // Display initial todos\n    this.onTodoListChanged(this.model.todos)\n\n    this.model.bindEvents(this)\n    this.view.bindEvents(this)\n\n    this.temporaryEditValue = ''\n  }\n\n  onTodoListChanged = todos => {\n    this.view.displayTodos(todos)\n  }\n\n  // Handle submit event for adding a todo\n  handleAddTodo = event => {\n    event.preventDefault()\n\n    if (this.view.todoText) {\n      const todo = {\n        id:\n          this.model.todos.length > 0\n            ? this.model.todos[this.model.todos.length - 1].id + 1\n            : 1,\n        text: this.view.todoText,\n        complete: false,\n      }\n\n      this.model.addTodo(todo)\n      this.view.resetInput()\n    }\n  }\n\n  // Handle click event for deleting a todo\n  handleDeleteTodo = event => {\n    if (event.target.className === 'delete') {\n      const id = parseInt(event.target.parentElement.id)\n\n      this.model.deleteTodo(id)\n    }\n  }\n\n  // Handle change event for toggling a todo\n  handleToggle = event => {\n    if (event.target.type === 'checkbox') {\n      const id = parseInt(event.target.parentElement.id)\n\n      this.model.toggleTodo(id)\n    }\n  }\n\n  // Update temporary state\n  handleEditTodo = event => {\n    if (event.target.className === 'editable') {\n      this.temporaryEditValue = event.target.innerText\n    }\n  }\n\n  // Send the completed value to the model\n  handleEditTodoComplete = event => {\n    if (this.temporaryEditValue) {\n      const id = parseInt(event.target.parentElement.id)\n\n      this.model.editTodo(id, this.temporaryEditValue)\n      this.temporaryEditValue = ''\n    }\n  }\n}\n","import { render } from \"./js-mvc.vue?vue&type=template&id=98500a8c\"\nimport script from \"./js-mvc.vue?vue&type=script&lang=js\"\nexport * from \"./js-mvc.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}